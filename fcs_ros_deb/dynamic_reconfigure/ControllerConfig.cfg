PACKAGE = "fcs_ros_deb"

from dynamic_reconfigure.parameter_generator_catkin import *

generator = ParameterGenerator()

mode_enum = generator.enum([    generator.const("flaps_roll", int_t, 0, "Roll control only with flap trim"),
                                generator.const("flaps_both", int_t, 1, "Roll and altitude, only on flaps"),
                                generator.const("both_roll", int_t, 2, "Roll only but with elevators"),
                                generator.const("both_both", int_t, 3, "Roll and altitude, flaps and elevators")],
                    "Enum of controller modes")

generator.add("mode", int_t, 0, "Controller modes", 1, 0, 3, edit_method=mode_enum);

generator.add("p_altitude",  double_t, 0, "P gain of altitude controller", 0.5, 0, 1.5)
generator.add("i_altitude",  double_t, 0, "I gain of altitude controller", 0, 0, 0.5)
generator.add("d_altitude",  double_t, 0, "D gain of altitude controller", 0, 0, 1)

generator.add("p_altitude_rate",  double_t, 0, "P gain of altitude_rate controller", 0.3, 0, 1.5)
generator.add("i_altitude_rate",  double_t, 0, "I gain of altitude_rate controller", 0.05, 0, 0.5)
generator.add("d_altitude_rate",  double_t, 0, "D gain of altitude_rate controller", 0.05, 0, 1)

generator.add("p_roll",  double_t, 0, "P gain of roll controller", 0.5, 0, 1.5)
generator.add("i_roll",  double_t, 0, "I gain of roll controller", 0.2, 0, 0.5)
generator.add("d_roll",  double_t, 0, "D gain of roll controller", 0, 0, 1)

generator.add("p_pitch", double_t, 0, "P gain of pitch controller", 0.1, -0.5, 0.5)
generator.add("i_pitch", double_t, 0, "I gain of pitch controller", 0, -0.3, 0.3)
generator.add("d_pitch", double_t, 0, "D gain of pitch controller", 0, -0.5, 0.5)

exit(generator.generate(PACKAGE, PACKAGE, "Controller"))